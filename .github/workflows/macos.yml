name: macOS
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  pull_request:
    # Do not use paths-ignore for required status checks
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  merge_group:

env:
  # GITHUB_PULL_REQUEST_URL are used for commenting test reports in Launchable Github App.
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/link.py#L42
  GITHUB_PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
  # The following envs are necessary in Launchable tokenless authentication.
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/authentication.py#L20
  LAUNCHABLE_ORGANIZATION: "ruby"
  LAUNCHABLE_WORKSPACE: "ruby"
  # https://github.com/launchableinc/cli/blob/v1.80.1/launchable/utils/authentication.py#L71
  GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        test_task: ['check']
        configure: ['']
        os: ${{ fromJSON(format('["macos-12","macos-13"{0}]', (github.repository == 'ruby/ruby' && ',"macos-arm-oss"' || ''))) }}
        include:
          - test_task: test-all
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-13' }}
          - test_task: test-bundled-gems
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-13' }}
      fail-fast: false

    env:
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}

    runs-on: ${{ matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github
          fetch-depth: 0

      - name: Install libraries
        uses: ./.github/actions/setup/macos

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true
          dummy-files: ${{ matrix.test_task == 'check' }}

      - name: Run configure
        run: ../src/configure -C --disable-install-doc ${{ matrix.configure }}

      - run: make prepare-gems
        if: ${{ matrix.test_task == 'test-bundled-gems' }}

      - run: make

      # Launchable requires Python and Java
      # https://www.launchableinc.com/docs/resources/cli-reference/
      - name: Set up Python
        uses: actions/setup-python@871daa956ca9ea99f3c3e30acb424b7960676734 # v5.0.0
        with:
          python-version: "3.10"
      - name: Set up JDK 17
        uses: actions/setup-java@7a445ee88d4e23b52c33fdc7601e40278616c7f8 # v4.0.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Launchable
        run: |
          pip install launchable
          launchable verify
          launchable record build --name ${GITHUB_PR_HEAD_SHA}

      # Set environment variable TESTS for make ${{ matrix.test_task }}
      - run: echo "${TESTS:+TESTS=`echo "$TESTS" | sed 's| |$$/ -n!/|g;s|^|-n!/|;s|$|$$/|'`}" >> "$GITHUB_ENV"
        env:
          TESTS: "${{ matrix.test_task == 'check' && matrix.skipped_tests || '' }}"
      - run: echo "TESTS=--repeat-count=2" >> "$GITHUB_ENV"
        if: ${{ startsWith(  matrix.test_task , 'test-all' ) }}
      - run: echo "TESTS=$TESTS --launchable-test-reports=${{ github.run_number }}.json" >> "$GITHUB_ENV"

      - name: make ${{ matrix.test_task }}
        run: |
          make -s ${{ matrix.test_task }} TESTS="$TESTS"
        timeout-minutes: 60
        env:
          RUBY_TESTOPTS: '-q --tty=no'
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: 'typeprof'
          PRECHECK_BUNDLED_GEMS: 'no'

      - name: make skipped tests
        run: |
          make -s test-all TESTS=`echo "$TESTS" | sed 's| |$$/ -n/|g;s|^|-n/|;s|$|$$/|'`
        env:
          GNUMAKEFLAGS: ''
          RUBY_TESTOPTS: '-v --tty=no'
          TESTS: ${{ matrix.skipped_tests }}
          PRECHECK_BUNDLED_GEMS: 'no'
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests != '' }}
        continue-on-error: ${{ matrix.continue-on-skipped_tests || false }}

      - name: Launchable - record tests
        run: launchable record tests --flavor os=${{ matrix.os }} raw ${{ github.run_number }}.json
        if: ${{ startsWith(  matrix.test_task , 'test-all' ) && matrix.os == 'macos-arm-oss'}}

      - uses: ./.github/actions/slack
        with:
          label: ${{ matrix.os }} / ${{ matrix.test_task }} ${{ matrix.configure }}
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() }}

  result:
    if: ${{ always() }}
    name: ${{ github.workflow }} result
    runs-on: macos-latest
    needs: [make]
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

defaults:
  run:
    working-directory: build
