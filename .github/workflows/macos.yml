name: macOS
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  pull_request:
    # Do not use paths-ignore for required status checks
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  merge_group:

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

env:
  GITPULLOPTIONS: --no-tags origin ${{ github.ref }}

jobs:
  setup:
    strategy:
      matrix:
        test_task: ["check"]
        test_opts: [""]
        os:
          - macos-12
          - macos-13
          - ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
        include:
          - test_task: test-all
            test_opts: --repeat-count=2
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundler-parallel
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundled-gems
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github
      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true
          dummy-files: ${{ matrix.test_task == 'check' }}
          # Set fetch-depth: 10 so that Launchable can receive commits information.
          fetch-depth: 10
      - name: Set up Launchable
        id: enable-launchable
        uses: ./.github/actions/launchable/setup
        with:
          launchable-token: ${{ secrets.LAUNCHABLE_TOKEN }}
          srcdir: src
      - run: |
          launchable subset --target 100% --split --get-tests-from-previous-sessions raw > launchable-subset-id.txt
          if: ${{ matrix.test_task == 'check' || matrix.test_task == 'test-all' }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}${{ matrix.test_task }}
          path: launchable-subset-id.txt

  make1:
    needs: [setup]
    strategy:
      matrix:
        test_task: ['check']
        test_opts: ['']
        os:
          - macos-12
          - macos-13
          - ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
        include:
          - test_task: test-all
            test_opts: --repeat-count=2
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundler-parallel
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundled-gems
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
      fail-fast: false

    runs-on: ${{ matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github

      - name: Install libraries
        uses: ./.github/actions/setup/macos

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true
          dummy-files: ${{ matrix.test_task == 'check' }}

      - name: Run configure
        run: ../src/configure -C --disable-install-doc

      - run: make prepare-gems
        if: ${{ matrix.test_task == 'test-bundled-gems' }}

      - run: make

      - name: Set test options for skipped tests
        run: |
          set -x
          TESTS="$(echo "${{ matrix.skipped_tests }}" | sed 's| |$$/ -n!/|g;s|^|-n!/|;s|$|$$/|')"
          echo "TESTS=${TESTS}" >> $GITHUB_ENV
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests }}

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}${{ matrix.test_task }}
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}
      - name: Install launchable command
        run: |
          pip install launchable
          launchable split-subset --subset-id $(cat launchable-subset-id.txt) --bin 2/2 raw > launchable-subset.txt
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}

      - name: Set extra test options
        run: echo "TESTS=$TESTS ${{ matrix.test_opts }}" >> $GITHUB_ENV
        if: matrix.test_opts

      - name: make ${{ matrix.test_task }}
        run: |
          make -s ${{ matrix.test_task }} ${TESTS:+TESTS="$TESTS"}
        timeout-minutes: 60
        env:
          RUBY_TESTOPTS: '-q --tty=no'
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: 'minitest,test-unit,debug,bigdecimal,drb,typeprof'
          PRECHECK_BUNDLED_GEMS: 'no'

      - name: make skipped tests
        run: |
          make -s test-all TESTS="${TESTS//-n!\//-n/}"
        env:
          GNUMAKEFLAGS: ''
          RUBY_TESTOPTS: '-v --tty=no'
          PRECHECK_BUNDLED_GEMS: 'no'
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests }}
        continue-on-error: ${{ matrix.continue-on-skipped_tests || false }}

      - run: launchable record tests --subset-id $(cat launchable-subset-id.txt) raw launchable_reports.json
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}

  make2:
    needs: [setup]
    strategy:
      matrix:
        test_task: ['check']
        test_opts: ['']
        os:
          - macos-12
          - macos-13
          - ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
        include:
          - test_task: test-all
            test_opts: --repeat-count=2
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundler-parallel
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
          - test_task: test-bundled-gems
            os: ${{ github.repository == 'ruby/ruby' && 'macos-arm-oss' || 'macos-14' }}
      fail-fast: false

    runs-on: ${{ matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )}}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github

      - name: Install libraries
        uses: ./.github/actions/setup/macos

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build
          makeup: true
          dummy-files: ${{ matrix.test_task == 'check' }}

      - name: Run configure
        run: ../src/configure -C --disable-install-doc

      - run: make prepare-gems
        if: ${{ matrix.test_task == 'test-bundled-gems' }}

      - run: make

      - name: Set test options for skipped tests
        run: |
          set -x
          TESTS="$(echo "${{ matrix.skipped_tests }}" | sed 's| |$$/ -n!/|g;s|^|-n!/|;s|$|$$/|')"
          echo "TESTS=${TESTS}" >> $GITHUB_ENV
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests }}

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}${{ matrix.test_task }}
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}
      - name: Install launchable command
        run: |
          pip install launchable
          launchable split-subset --subset-id $(cat launchable-subset-id.txt) --bin 2/2 raw > launchable-subset.txt
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}

      - name: Set extra test options
        run: echo "TESTS=$TESTS ${{ matrix.test_opts }}" >> $GITHUB_ENV
        if: matrix.test_opts

      - name: make ${{ matrix.test_task }}
        run: |
          make -s ${{ matrix.test_task }} ${TESTS:+TESTS="$TESTS"}
        timeout-minutes: 60
        env:
          RUBY_TESTOPTS: '-q --tty=no'
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: 'minitest,test-unit,debug,bigdecimal,drb,typeprof'
          PRECHECK_BUNDLED_GEMS: 'no'

      - name: make skipped tests
        run: |
          make -s test-all TESTS="${TESTS//-n!\//-n/}"
        env:
          GNUMAKEFLAGS: ''
          RUBY_TESTOPTS: '-v --tty=no'
          PRECHECK_BUNDLED_GEMS: 'no'
        if: ${{ matrix.test_task == 'check' && matrix.skipped_tests }}
        continue-on-error: ${{ matrix.continue-on-skipped_tests || false }}

      - run: launchable record tests --subset-id $(cat launchable-subset-id.txt) raw launchable_reports.json
        if: ${{ always() && (matrix.test_task == 'check' || matrix.test_task == 'test-all') }}

  # result:
  #   if: ${{ always() }}
  #   name: ${{ github.workflow }} result
  #   runs-on: macos-latest
  #   needs: [make]
  #   steps:
  #     - run: exit 1
  #       working-directory:
  #       if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

defaults:
  run:
    working-directory: build
